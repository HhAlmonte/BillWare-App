@inject NavigationManager navigationManager;
@inject LocalStorageService _localStorageService;

<div class="@DashboardClass">
    <div class="container body-color">
        <div class="top-menu">
            <div class="logo">
                <span>@Configuration.APP_NAME</span>
            </div>
            <div class="toggle" @onclick="ToggleMenu">
                @if (IsMenuOpen)
                {
                    <i class="bx bx-x"></i>
                }
                else
                {
                    <i class="bx bx-menu"></i>
                }
            </div>
        </div>

        <div class="menu">
            @foreach (var (menuItem, index) in MenuItems.Select((item, index) => (item, index)))
            {
                @if (menuItem.Role == Role || menuItem.Role == "Both")
                {
                    <div class="enlace" style="background: @(index == ActiveLinkIndex ? "#184463" : "")" @onclick="@(() => NavigateTo(menuItem.Url, index))">
                        <i class="@menuItem.Icon"></i>
                        <span>@menuItem.Name</span>
                    </div>
                }
            }
            
            <div class="enlace" style="background: #184463" @onclick="LogOut">
                <i class="bx bx-log-out"></i>
                <span>Salir</span>
            </div>
        </div>
    </div>
</div>

@code {
    private bool IsMenuOpen = false;
    private string DashboardClass = "menu-dashboard";
    private string Role = string.Empty;
    private List<MenuItem> MenuItems = new List<MenuItem>();
    private int ActiveLinkIndex = -1; 

    private void ToggleMenu()
    {
        IsMenuOpen = !IsMenuOpen;
        DashboardClass = IsMenuOpen ? "menu-dashboard open" : "menu-dashboard";
    }

    private async Task LogOut()
    {
        await _localStorageService.RemoveItem(Configuration.TOKEN);

        navigationManager.NavigateTo("account/signin");
    }

    private void NavigateTo(string url, int index)
    {
        IsMenuOpen = !IsMenuOpen;
        DashboardClass = "menu-dashboard";
        navigationManager.NavigateTo(url);

        // Establecer el enlace activo
        ActiveLinkIndex = index;
    }

    private void LoadMenuItem()
    {
        MenuItems.Add(new MenuItem { Name = "Dashboard", Url = "/", Icon = "bx bx-category", Role = "Administrator" });
        MenuItems.Add(new MenuItem { Name = "Servicios", Url = "service/index", Icon = "bx bx-leaf", Role = "Both" });
        MenuItems.Add(new MenuItem { Name = "Inventario", Url = "inventory/index", Icon = "bx bx-store-alt", Role = "Both" });
        MenuItems.Add(new MenuItem { Name = "Categoría", Url = "category/index", Icon = "bx bx-category", Role = "Both" });
        MenuItems.Add(new MenuItem { Name = "Cliente", Url = "costumer/index", Icon = "bx bx-user", Role = "Both" });
        MenuItems.Add(new MenuItem { Name = "Facturación", Url = "billing/index", Icon = "bx bxs-badge-dollar", Role = "Both" });
        MenuItems.Add(new MenuItem { Name = "Usuarios", Url = "user/index", Icon = "bx bx-user-circle", Role = "Administrator" });
    }

    protected override async Task OnInitializedAsync()
    {
        LoadMenuItem();
        Role = await _localStorageService.GetItem(Configuration.ROLE);
    }

    public class MenuItem
    {
        public string Name { get; set; }
        public string Url { get; set; }
        public string Icon { get; set; }
        public string Role { get; set; }
    }
}

