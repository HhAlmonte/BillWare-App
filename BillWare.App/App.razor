@inject NavigationManager NavigationManager
@inject BeamAuthenticationStateProviderHelper AuthenticationStateProvider
@inject LocalStorageHelper LocalStorageService

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@if (IsLoading)
{
    <LoadingOverlay >
    </LoadingOverlay>
}

@code {
    private bool isUserAuthenticated = false;
    private bool IsLoading = false;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isUserAuthenticated = authState.User.Identity!.IsAuthenticated;

        if (!isUserAuthenticated)
        {
            await LocalStorageService.Clear();
            NavigationManager.NavigateTo("account/signin");
        }

        IsLoading = false;
    }
}