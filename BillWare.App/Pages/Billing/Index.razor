@using BillWare.Application.Billing.Models;

@page "/billing/index"

@inject IBillingItemService _billingItemService;
@inject IBillingService _billingService;
@inject IJSRuntime js;
@inject DialogService DialogService;

<h3>Facturación</h3>

<hr />

<RadzenButton Text="CREAR FACTURA" class="mb-3 mt-3" Style="background-color:#003053; color: #FFF" Click="@(async() => await OpenAddDialogForm())" />
<RadzenTextBox Placeholder="Presiona ENTER al buscar" Change="@(async(e) => await GetWithSearch(e))" />

<RadzenDataGrid Data="Billings"
                TItem="BillingModel"
                Responsive="true"
                AllowColumnResize="true"
                ExpandMode="DataGridExpandMode.Single">
    <EmptyTemplate>
        <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No records to display.</p>
    </EmptyTemplate>
    <Template Context="billingItems">
        <RadzenCard Style="margin-bottom:20px">
            productos registrados por el cliente: <b>@billingItems.FullName (@billingItems.BillingItems.Count())   </b>

            @if(billingItems.BillingStatus == (int)Common.BillingStatus.Pendiente)
            {
                <RadzenButton ButtonStyle="ButtonStyle.Warning" Text="Imprimir factura" Click="@(() => PrintInvoice(billingItems))"/>
            }
        </RadzenCard>

        <RadzenDataGrid Data="@billingItems.BillingItems" AllowColumnResize Responsive TItem="BillingItemModel" AllowPaging PageSize="5" @ref="grid">
            <Columns>
                <RadzenDataGridColumn TItem="BillingItemModel" Property="Code" Title="Codigo" />
                <RadzenDataGridColumn TItem="BillingItemModel" Property="Description" Title="Descripción" />
                <RadzenDataGridColumn TItem="BillingItemModel" Property="Quantity" Title="Cantidad" />
                <RadzenDataGridColumn TItem="BillingItemModel" Title="Precio">
                    <Template Context="price">
                        @price.Price.ToString("C")
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="BillingItemModel" Title="Impuesto">
                    <Template Context="price">
                        @price.Tax.ToString("C")
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="BillingItemModel" Title="Importe">
                    <Template Context="price">
                        @price.Amount.ToString("C")
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="BillingItemModel" Property="CreatedAt" Title="Fecha de creación" />
                <RadzenDataGridColumn TItem="BillingItemModel" Title="Acciones" TextAlign="TextAlign.Center" Visible="billingItems.BillingStatus == (int)Common.BillingStatus.Pendiente">
                    <Template Context="actions">
                        @if (billingItems.BillingStatus == (int)Common.BillingStatus.Pendiente)
                        {
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Click="@(async() => await DeleteBillingItem(actions.Id))"/>
                        }
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </Template>

    <Columns>
        <RadzenDataGridColumn TItem="BillingModel"
                              Property="InvoiceNumber"
                              Title="N. Factura">
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="BillingModel"
                              Property="FullName"
                              Title="Cliente">
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="BillingModel"
                              Property="SellerName"
                              Title="Vendedor">
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="BillingModel"
                              Title="Precio total">
                <Template Context="totalPrice">
                    @totalPrice.TotalPriceWithTax.ToString("C")
                </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="BillingModel"
                              Title="Estatus">
                <Template Context="status">
                    @{
                        var statusName = (Common.BillingStatus)status.BillingStatus;
                    }
                    @statusName
                </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="BillingModel"
                              Property="CreatedAt"
                              Title="Fecha de creación">
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="BillingModel"
                              Title="Acciones"
                              Context="data"
                              TextAlign="TextAlign.Center">
            <Template Context="actions">
                @if(actions.BillingStatus == (int)Common.BillingStatus.Pendiente)
                {
                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Click="@(async() => await Delete(actions.Id))" />
                    <RadzenButton ButtonStyle="ButtonStyle.Warning" Icon="edit" Click="@(async() => await OpenEditDialogForm(actions))" />
                }
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

<RadzenPager PageSize="BaseResponse.PageSize"
             Count="BaseResponse.TotalItems"
             PageChanged="@(async(e) => await PageIndexChanged(e.PageIndex))"
             PageSizeOptions="PageSizeOptions"
             PageSizeText="registros por página"
             HorizontalAlign="HorizontalAlign.Left"
             PageSizeChanged="@(async(e) => await PageSizeChanged(e))"
             ShowPagingSummary="true"
             PagingSummaryFormat="@pagingSummaryFormat">
</RadzenPager>

@if (IsLoading)
{
    <LoadingOverlay />
}

@code {
}
